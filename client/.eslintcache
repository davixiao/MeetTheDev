[{"/Users/huogenx/Desktop/devconnector/client/src/index.js":"1","/Users/huogenx/Desktop/devconnector/client/src/App.js":"2","/Users/huogenx/Desktop/devconnector/client/src/components/layout/Navbar.js":"3","/Users/huogenx/Desktop/devconnector/client/src/components/layout/Landing.js":"4","/Users/huogenx/Desktop/devconnector/client/src/components/auth/Login.js":"5","/Users/huogenx/Desktop/devconnector/client/src/components/auth/Register.js":"6","/Users/huogenx/Desktop/devconnector/client/src/store.js":"7","/Users/huogenx/Desktop/devconnector/client/src/reducers/index.js":"8"},{"size":197,"mtime":1609389219584,"results":"9","hashOfConfig":"10"},{"size":1192,"mtime":1609444828505,"results":"11","hashOfConfig":"10"},{"size":525,"mtime":1609392296321,"results":"12","hashOfConfig":"10"},{"size":741,"mtime":1609392386633,"results":"13","hashOfConfig":"10"},{"size":1732,"mtime":1609395251451,"results":"14","hashOfConfig":"10"},{"size":3135,"mtime":1609395290834,"results":"15","hashOfConfig":"10"},{"size":596,"mtime":1609444417297,"results":"16","hashOfConfig":"10"},{"size":78,"mtime":1609444600684,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"112e9js",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huogenx/Desktop/devconnector/client/src/index.js",[],["37","38"],"/Users/huogenx/Desktop/devconnector/client/src/App.js",[],"/Users/huogenx/Desktop/devconnector/client/src/components/layout/Navbar.js",[],"/Users/huogenx/Desktop/devconnector/client/src/components/layout/Landing.js",[],"/Users/huogenx/Desktop/devconnector/client/src/components/auth/Login.js",["39"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport const Login = () => {\n  // formData is where we store the state.\n  // SetFormData is a function that takes in values and changes formData to those values\n  // inside the useState, we have an initial value of what is in the state.\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault(); // stops the thing from doing what it does default. In this case, prevents it from\n    // submitting the form\n    console.log('SUCCESS');\n  };\n  return (\n    <>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/Register'>Sign Up</Link>\n      </p>\n    </>\n  );\n};\n","/Users/huogenx/Desktop/devconnector/client/src/components/auth/Register.js",["40"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport const Register = () => {\n  // formData is where we store the state.\n  // SetFormData is a function that takes in values and changes formData to those values\n  // inside the useState, we have an initial value of what is in the state.\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault(); // stops the thing from doing what it does default. In this case, prevents it from\n    // submitting the form\n    if (password !== password2) {\n      console.log('Passwords do not match');\n    } else {\n      console.log('success');\n      /*\n      without redux, we can do this:\n      const newUser = {\n        name,\n        email,\n        password,\n      };\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        };\n\n        const body = JSON.stringify(newUser); // payload/body\n\n        const res = await axios.post('/api/users', body, config); // we have proxy, so no need for localhost:5000 instead of 3000.\n        console.log(res.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n      */\n    }\n  };\n  return (\n    <>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            minLength='6'\n            value={password2}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </>\n  );\n};\n","/Users/huogenx/Desktop/devconnector/client/src/store.js",[],"/Users/huogenx/Desktop/devconnector/client/src/reducers/index.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]